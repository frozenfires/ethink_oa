<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:task="http://www.springframework.org/schema/task"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa" 
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd"
		default-lazy-init="false">

	<description>Spring公共配置</description>

	<!-- 使用annotation 自动注册bean,并检查@Required,@Autowired的属性已被注入 -->
  <bean id="myBatisTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
    
    <!-- MyBatis配置 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath:/mybatis/${apptype}*Mapper_${dbtype}.xml" />
		<property name="plugins">
        <array>
            <ref bean="paginationInterceptor"/>
        </array>
    </property>
	</bean>	
	
	
<!-- 	  <context:component-scan base-package="com.ebring.oa.event" />
	 <task:scheduler id="taskScheduler" pool-size="100" />

    <task:scheduled-tasks scheduler="taskScheduler">
     
        <task:scheduled ref="timeOutEventDeal" method="job1" cron="0/5 * *  * * ?"/>	  
      </task:scheduled-tasks>  -->
	<!--当前数据库类型   支持 oracle,mysql,sybase-->
	<bean id="dataBaseType" class="com.ebring.platform.common.interceptor.DataBaseType">
	 	<property name="dataBaseType" value="${dbtype}"></property>
	</bean>
	
	<!-- 分页 -->
	<bean id="paginationInterceptor" class="com.ebring.platform.common.interceptor.PaginationInterceptor">
		<property name="dataBaseType" ref="dataBaseType"></property>
	</bean>
	
	<!-- 事务 -->
	
	<tx:advice id="userTxAdvice" transaction-manager="myBatisTransactionManager">
    <tx:attributes>

      <tx:method name="delete*" propagation="REQUIRED" read-only="false"

                            rollback-for="java.lang.Exception" no-rollback-for="java.lang.RuntimeException"/>

      <tx:method name="insert*" propagation="REQUIRED" read-only="false"

                            rollback-for="java.lang.RuntimeException" />

      <tx:method name="update*" propagation="REQUIRED" read-only="false"

                            rollback-for="java.lang.RuntimeException" />

      <tx:method name="find*" propagation="SUPPORTS"/>

      <tx:method name="get*" propagation="SUPPORTS"/>

      <tx:method name="select*" propagation="SUPPORTS"/>

    </tx:attributes>

  </tx:advice>
  <aop:config>   
    <aop:pointcut id="pc" expression="execution(public * com.ebring.etms.trans.*.service.*.*(..))" /> <!--把事务控制在Service层-->
    <aop:advisor pointcut-ref="pc" advice-ref="userTxAdvice" />
  </aop:config>
    

	<!-- production环境 -->
	<beans profile="production">
		<context:property-placeholder ignore-resource-not-found="true"
			location="classpath*:/application.properties" />	

<!-- 
<bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close">
			<property name="driverClassName" value="${jdbc.driver}" />
			<property name="url" value="${jdbc.url}" />
			<property name="username" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />
			<property name="defaultAutoCommit" value="false" />
		</bean>
 -->

 <!-- BoneCP configuration-->

 
<bean id="dataSource" class="com.jolbox.bonecp.BoneCPDataSource" destroy-method="close">
   <property name="driverClass" value="${jdbc.driver}" />
   <property name="jdbcUrl" value="${jdbc.url}" />
   <property name="username" value="${jdbc.username}"/>
   <property name="password" value="${jdbc.password}"/>
   <property name="idleConnectionTestPeriod" value="60"/>
   <property name="idleMaxAge" value="240"/>
   <property name="maxConnectionsPerPartition" value="5"/>
   <property name="minConnectionsPerPartition" value="5"/>
   <property name="partitionCount" value="3"/>
   <property name="acquireIncrement" value="5"/>
   <property name="statementsCacheSize" value="100"/>
   <property name="releaseHelperThreads" value="3"/>
</bean>


	
		<!-- quartz使用的数据源配置
		<bean id="quartzDataSource"  class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close">
			<property name="driverClassName" value="${quartz.jdbc.driver}" />
			<property name="url" value="${quartz.jdbc.url}" />
			<property name="username" value="${quartz.jdbc.username}" />
			<property name="password" value="${quartz.jdbc.password}" />
			<property name="defaultAutoCommit" value="false" />
		</bean>
		 -->
	</beans>
	
	<!-- local development环境 -->
	<beans profile="development">
		<context:property-placeholder ignore-resource-not-found="true"
			location="classpath*:/application.development.properties" />	

		<!-- Tomcat JDBC连接池 
		<bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close">
			<property name="driverClassName" value="${jdbc.driver}" />
			<property name="url" value="${jdbc.url}" />
			<property name="username" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />
			<property name="defaultAutoCommit" value="false" />
		</bean>-->
		
		<!-- 应用连接池-不依赖tomcat -->
		<!-- <bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource" >
			<property name="driverClass" value="${jdbc.driver}" />
			<property name="url" value="${jdbc.url}" />
			<property name="username" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />
		</bean> -->
		
		<bean id="dataSource" class="com.jolbox.bonecp.BoneCPDataSource" destroy-method="close">
		   <property name="driverClass" value="${jdbc.driver}" />
		   <property name="jdbcUrl" value="${jdbc.url}" />
		   <property name="username" value="${jdbc.username}"/>
		   <property name="password" value="${jdbc.password}"/>
		   <property name="idleConnectionTestPeriod" value="60"/>
		   <property name="idleMaxAge" value="240"/>
		   <property name="maxConnectionsPerPartition" value="5"/>
		   <property name="minConnectionsPerPartition" value="5"/>
		   <property name="partitionCount" value="1"/>
		   <property name="acquireIncrement" value="5"/>
		   <property name="statementsCacheSize" value="100"/>
		   <property name="releaseHelperThreads" value="3"/>
		</bean>
		
		<!-- Spring Simple连接池 for quartz 
		<bean id="quartzDataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
			<property name="driverClass" value="${quartz.jdbc.driver}" />
			<property name="url" value="${quartz.jdbc.url}" />
			<property name="username" value="${quartz.jdbc.username}" />
			<property name="password" value="${quartz.jdbc.password}" />
		</bean>-->
	</beans>

	<!-- functional test环境 -->
	<beans profile="functional">
		<context:property-placeholder ignore-resource-not-found="true"
			location="classpath*:/application.properties,
          			  classpath*:/application.functional.properties,
          			  classpath*:/application.functional-local.properties" />	
		
		<!-- Tomcat JDBC连接池 
		<bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close">
			<property name="driverClassName" value="${jdbc.driver}" />
			<property name="url" value="${jdbc.url}" />
			<property name="username" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />
			<property name="defaultAutoCommit" value="false" />
		</bean>-->
		
		<!-- 应用连接池-不依赖tomcat -->
		<bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource" >
			<property name="driverClass" value="${jdbc.driver}" />
			<property name="url" value="${jdbc.url}" />
			<property name="username" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />
			<property name="defaultAutoCommit" value="false" />
		</bean>
			
		<!-- Spring Simple连接池 for quartz 
		<bean id="quartzDataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
			<property name="driverClass" value="${quartz.jdbc.driver}" />
			<property name="url" value="${quartz.jdbc.url}" />
			<property name="username" value="${quartz.jdbc.username}" />
			<property name="password" value="${quartz.jdbc.password}" />
		</bean>-->
				
		
	</beans>
	

</beans>